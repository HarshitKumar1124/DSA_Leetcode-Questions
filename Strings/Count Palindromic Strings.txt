

STRING LEETCODE : 

Count Palindromic Strings :


Time Complexity : O(n^2) 

 //https://www.youtube.com/watch?v=WpYHNHofwjc
 
 

*****************************



class Solution {
public:
    int countSubstrings(string s) {
        
        
        //Gap Strategy with slight manipulation : 
        
        
        int n = s.size();
        
        vector<vector<int>> DP(n,vector<int>(n,-1));
        
        for(int i=0;i<n;i++)
        {
            DP[i][i]=1;
            
            if(i!=n-1)
            {
                if(s[i]==s[i+1])
                    DP[i][i+1]=1;
                else
                    DP[i][i+1]=0;
            }
        }
        
        
        for(int l=3;l<=n;l++)
        {
            for(int i=0;i<=n-l;i++)
            {
                int j = i+l-1;
                
                if(s[i]==s[j])
                    DP[i][j] = DP[i+1][j-1];
                else
                    DP[i][j] = 0;
            }
        }
        
        int counter=0;
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
                if(DP[i][j]==1)
                    counter++;
    
        }
        
        return counter;
        
    }
};