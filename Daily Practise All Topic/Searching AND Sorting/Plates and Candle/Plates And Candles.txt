



SEARCHING AND SORTING



Plates And Candles

********************

class Solution {
    
    int CountinRange(vector<int>&query, vector<int> &DP,string &s)
    {
        
        int start,end;
        
        if(s[query[0]]=='|')
            start = query[0];
        else
            start = upper_bound(DP.begin()+query[0],DP.begin() + query[1],DP[query[0]]) - DP.begin();
        
        if(s[query[1]]=='|')
            end = query[1];
        else
            end = upper_bound(DP.begin()+query[0],DP.begin() + query[1],DP[query[1]]-1) - DP.begin();
        
        if(start>end)
            return 0;
        
        
        int totalcharacter_inclusive =end-start+1;
        
        int totalCandles = DP[end] - DP[start] +1;
        
        return abs(totalcharacter_inclusive-totalCandles);
        
        
        
        
        
    }
    
public:
    vector<int> platesBetweenCandles(string s, vector<vector<int>>& queries) {
        
        int n = s.size();
        vector<int> DP(n);
        
        int counter=0;
        
      for(int i=0;i<n;i++)
      {
          if(s[i]=='*')
              DP[i]=counter;
          else
              DP[i]= ++counter;
      }
        
        vector<int> ans;
        
        for(int i=0;i<queries.size();i++)
            ans.push_back(CountinRange(queries[i],DP,s));
        
        return ans;
    }
};