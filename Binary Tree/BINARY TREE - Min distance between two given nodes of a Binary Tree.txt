

BINARY TREE - Min distance between two given nodes of a Binary Tree

***********************************************************************

class Solution{
    
    int Inorder(Node* root)
    {
        if(root==NULL)
        return 0;
        
        stack<Node*> stk;
        
        int maxi=0;
        
        while(stk.size()!=0 || root!=NULL)
        {
            if(root!=NULL)
            {
                stk.push(root);
                root=root->left;
            }
            else
            {
                Node* temp = stk.top();
                stk.pop();
                
                maxi = max(maxi,temp->data);
                root=temp->right;
            }
        }
        
        return maxi;
    }
    
    void CreateGraph(vector<int> Graph[],Node* root)
    {
        if(root==NULL)
        return;
        
        if(root->left!=NULL)
        Graph[root->data-1].push_back(root->left->data-1),Graph[root->left->data-1].push_back(root->data-1);
        
        if(root->right!=NULL)
        Graph[root->data-1].push_back(root->right->data-1),Graph[root->right->data-1].push_back(root->data-1);
        
        CreateGraph(Graph,root->left);
        CreateGraph(Graph,root->right);
    }
    
    
    int BFS(vector<int> Graph[],int element,int target,int n)
    {
        queue<pair<int,int>> q;
        q.push(make_pair(element,0));
        vector<int> visited(n,0);
        
        visited[element]=1;
        
        while(q.size()!=0)
        {
            pair<int,int> temp = q.front();
            int u = temp.first;
            int dist = temp.second;
            q.pop();
            
            for(auto x:Graph[u])
            {
                if(!visited[x])
                {
                    visited[x]=1;
                    if(x==target)
                    return dist +1;
                    
                    q.push(make_pair(x,dist+1));
                }
            }
        }
        
        
        return INT_MAX;
    }
    
    public:
    /* Should return minimum distance between a and b
    in a tree with given root*/
    int findDist(Node* root, int a, int b) {
        
        if(root==NULL)
        return 0;
        
        if(a==b)
        return 0;
        
        
        //Approach 1 : Construct Undirected Graph and APPLY BFS
        
        //Approach 2 : Find Lowest common Ancestor and add distance of a and b from that ancestor;
        
        
        //Doing Approach 1
        
        int n = Inorder(root); //max value of Node elements = n;
        
        vector<int> Graph[n];
        
        CreateGraph(Graph,root);
        
        
        
        
        return BFS(Graph,a-1,b-1,n);
        
    }
};